<!DOCTYPE html>
<html>

	<head>
		<title>Infant Mortality Rate</title>
		<meta charset="utf-8">
		<!-- Load d3.js -->
		<script src="https://d3js.org/d3.v5.min.js"></script>
		<!-- Add styles -->
			
		<link rel="stylesheet" type="text/css" href="index.css">  
	<!--
    <style>
        .tooltip {
            position: absolute;
            text-align: center;
            width: auto;
            height: auto;
            padding: 5px;
            font: 12px sans-serif;
            background: lightsteelblue;
            border: 0px;
            border-radius: 8px;
            pointer-events: none;
        }
    </style>
	--->

	</head>

	<body>
	<h1 id="intro">Infant Mortality Rate in 2023</h1>
    <div>
        <span class="italic">By Naveen Baskaran - UIUC CS 416 - July 2024</span>
        <hr>

        <h4>
            Infant mortality rate review for 2023.
        </h4>
        <ul>
            <li>
                <a href="#one" class="contents">Countries with higher IMR!</a>
            </li>
            <li>
                <a href="#two" class="contents">Does a country's GDP have a direct correlation to IMR?</a>
            </li>
            <li>
                <a href="#three" class="contents">Fertility rate impact?</a>
            </li>
        </ul>
        <hr>

    </div>
	
		<!-- Create a div where the graph will take place -->
		<div id="scene1"></div>
		<hr> 
		<div id="scene2"></div>
		<hr> 
		<div id="scene3"></div>


		<script>
		<!-- Scene 1 -->

		// set the dimensions and margins of the graph
		const margin = {top: 30, right: 30, bottom: 200, left: 60},
			width = 4000 - margin.left - margin.right,
			height = 700 - margin.top - margin.bottom;

		// Define Scene1 and append the svg canvas object to the body of the page
		const scene1= d3.select("#scene1")
		  .append("svg")
			.attr("width", width + margin.left + margin.right)
			.attr("height", height + margin.top + margin.bottom)
		  .append("g")
			.attr("transform", `translate(${margin.left}, ${margin.top})`);

		// Parse the Data
		d3.csv("https://raw.githubusercontent.com/naveenkcb/naveenkcb.github.io/main/narrative-viz-proj/world-data-2023.csv").then ( function(data) {

		  // sort data
		  data.sort(function(b, a) {
			return a.Value - b.Value;
		  });

		  // Add X axis
		  const x = d3.scaleBand()
			.range([ 0, width ])
			.domain(data.map(d => d.Country))
			.padding(0.2);
			
		  scene1.append("g")
			.attr("transform", `translate(0, ${height})`)
			.call(d3.axisBottom(x))
			.selectAll("text")
			  .attr("transform", "translate(-10,0)rotate(-45)")
			  .style("text-anchor", "end");

		  // Add Y axis
		  const y = d3.scaleLinear()
			.domain([0, 100])
			.range([ height, 0]);
			
		  scene1.append("g")
			.call(d3.axisLeft(y));

		  // Add Bars
		  scene1.selectAll("mybar")
			.data(data)
			.enter()
			.append("rect")
			  .attr("x", d => x(d.Country))
			  .attr("y", d => y(d.Infant_mortality))
			  .attr("width", x.bandwidth())
			  .attr("height", d => height - y(d.Infant_mortality))
			  //.attr("fill", "#69b3a2")
			  .attr("fill", "green")

			// Animation
			scene1.selectAll("rect")
			  .transition()
			  .duration(800)
			  .attr("y", function(d) { return y(d.Infant_mortality); })
			  .attr("height", function(d) { return height - y(d.Infant_mortality); })
			  .delay(function(d,i){/*console.log(i) ;*/ return(i*100)})

		})
		</script>

		<!-- Scene 2 -->

		<script>

		// set the dimensions and margins of the graph
		var margin2 = {top: 10, right: 30, bottom: 30, left: 60},
			width2 = 800 - margin2.left - margin2.right,
			height2 = 500 - margin2.top - margin2.bottom;

		// append the svg object to the body of the page
		var scene2 = d3.select("#scene2")
		  .append("svg")
			.attr("width", width2 + margin2.left + margin2.right)
			.attr("height", height2 + margin2.top + margin2.bottom)
		  .append("g")
			.attr("transform",
				  "translate(" + margin2.left + "," + margin2.top + ")");

		//Read the data
		d3.csv("https://raw.githubusercontent.com/naveenkcb/naveenkcb.github.io/main/narrative-viz-proj/world-data-2023.csv").then ( function(data) {
		  
		  // Add X axis
		/*  var x2 = d3.scaleLog()
			.domain([0, 21428000000000])
			.range([ 0, width2 ])
			.base(10);
		  scene2.append("g")
			.attr("transform", "translate(0," + height2 + ")")
			.call(d3.axisBottom(x2)
				//.tickValues([10, 10000000, 1000000000, 10000000000, 100000000000000])
				.tickValues(10)
				.tickFormat(d3.format("~s"))
				);*/
				
		// Add X axis
			  var x2 = d3.scaleLinear()
				.domain([0, 14])
				.range([ 0, width2 ]);
			  scene2.append("g")
				.attr("transform", "translate(0," + height2 + ")")
				.call(d3.axisBottom(x2));


		  // Add Y axis
		  var y2 = d3.scaleLinear()
			.domain([0, 100])
			.range([ height2, 0]);
		  scene2.append("g")
			.call(d3.axisLeft(y2));

		  // Add dots
		  scene2.append('g')
			.selectAll("dot")
			.data(data)
			.enter()
			.append("circle")
			  .attr("cx", function (d) { return x2(d.Minimum_wage); } )
			  .attr("cy", function (d) { return y2(d.Infant_mortality); } )
			  .attr("r", 5)
			  .style("fill", "#69b3a2")

		})

		</script>


		<!-- Scene 3 -->

		<script>

			// set the dimensions and margins of the graph
			var margin3 = {top: 10, right: 30, bottom: 30, left: 60},
				width3 = 800 - margin3.left - margin3.right,
				height3 = 500 - margin3.top - margin3.bottom;

			// append the svg object to the body of the page
			var scene3 = d3.select("#scene3")
			  .append("svg")
				.attr("width", width3 + margin3.left + margin3.right)
				.attr("height", height3 + margin3.top + margin3.bottom)
			  .append("g")
				.attr("transform",
					  "translate(" + margin3.left + "," + margin3.top + ")");
			
			var scatter_tooltip = d3.select("body")
										.append("div")
										.append("div")
										.style("opacity", 0)
										.attr("class", "tooltip")
										.style("background-color", "black")
										.style("border-radius", "15px")
										.style("padding", "8px")
										.style("color", "white")
									

			
			//Read the data
			d3.csv("https://raw.githubusercontent.com/naveenkcb/naveenkcb.github.io/main/narrative-viz-proj/world-data-2023.csv").then ( function(data) {

			// Add X axis
			  var x3 = d3.scaleLinear()
				.domain([0, 7])
				.range([ 0, width3 ]);
			  scene3.append("g")
				.attr("transform", "translate(0," + height3 + ")")
				.call(d3.axisBottom(x3));

			  // Add Y axis
			  var y3 = d3.scaleLinear()
				.domain([0, 100])
				.range([ height3, 0]);
			  scene3.append("g")
				.call(d3.axisLeft(y3));



			  // Add dots
			  scene3.append('g')
				.selectAll("dot")
				.data(data)
				.enter()
				.append("circle")
				  .attr("cx", function (d) { return x3(d.Fertility_Rate); } )
				  .attr("cy", function (d) { return y3(d.Infant_mortality); } )
				  .attr("r", 5)
				  .style("fill", "#69b3a2")
				  
				    .on("mouseover", function (d) {
							scatter_tooltip.transition()
								.duration(200)
								.style("opacity", .9);
							scatter_tooltip.html("Country: " + d.Country + " , " + "Infant Mortality: " + d.Infant_mortality)
								.style("left", (d3.event.pageX) + "px")
								.style("top", (d3.event.pageY - 28) + "px");
						})
						
					.on("mouseout", function (d) {
						scatter_tooltip.transition()
							.duration(500)
							.style("opacity", 0);
					});
					
			// Annotation
			scene3.append('rect')
				.attr("x", 150)
				.attr("y", 5)
				.attr("width", 500)
				.attr("height", 30)
				.style("fill", 'lightblue')

			scene3.append('text')
				.attr("x", 160)
				.attr("y", 15)
				.attr("width", 60)
				.attr("height", 20)
				.style("fill", 'red')
				.text("Hover the mouse over each data point to see additional details.")
				.attr("text-anchor", "left")
				.style("alignment-baseline", "middle")
					

			})

		</script>

	</body>
</html>