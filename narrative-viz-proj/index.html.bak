<!DOCTYPE html>

<html>

	<head>
		<title>Infant Mortality Rate</title>
		<meta charset="utf-8">
		<!-- Load d3.js -->
		<script src="https://d3js.org/d3.v5.min.js"></script>
		<!-- Add styles -->
		<link rel="stylesheet" type="text/css" href="index.css">
	</head>




	<body>
	<h1 id="intro">Infant Mortality Rate in 2023</h1>
    <div>
        <span class="italic">By Naveen Baskaran - UIUC CS 416 - July 2024</span>
        <hr>

        <h4>
            Infant mortality rate review for 2023
        </h4>
        <ul>
            <li>
                <a href="#one" class="contents">Overview of Countries with Infamt Mortality Rates that are alrming</a>
            </li>
            <li>
                <a href="#two" class="contents">Does a country's Minimum Wage earnings have a direct correlation to IMR?</a>
            </li>
            <li>
                <a href="#three" class="contents">Does the women's Fertility rate for that country have any impact?</a>
            </li>
        </ul>
        <hr>

    </div>
	
		<!-- Create a div where the graph will take place -->
		<div id="scene1"></div>
		<hr> 
		<div id="scene2"></div>
		<hr> 
		<div id="scene3"></div>


<!--- Scene1 --->

		<script>
		<!-- Scene 1 -->

		// set the dimensions and margins of the graph
		const margin1 = {top: 30, right: 30, bottom: 200, left: 130},
			width1 = 4000 - margin1.left - margin1.right,
			height1 = 700 - margin1.top - margin1.bottom;

		// Define Scene1 and append the svg canvas object to the body of the page
		const scene1= d3.select("#scene1")
		  .append("svg")
			.attr("width", width1 + margin1.left + margin1.right)
			.attr("height", height1 + margin1.top + margin1.bottom)
		  .append("g")
			.attr("transform", `translate(${margin1.left}, ${margin1.top})`);

		// Parse the Data
		d3.csv("https://raw.githubusercontent.com/naveenkcb/naveenkcb.github.io/main/narrative-viz-proj/world-data-2023-cleaned-3.csv").then ( function(data) {

		  // sort data
		  data.sort(function(b, a) {
			return a.Infant_Mortality - b.Infant_Mortality;
		  });  

		  // Add X axis
		  const x1 = d3.scaleBand()
			.range([ 0, width1 ])
			.domain(data.map(d => d.Country))
			.padding(0.2);
			
		  scene1.append("g")
			.attr("transform", `translate(0, ${height1})`)
			.call(d3.axisBottom(x1))
			.selectAll("text")
			  .attr("transform", "translate(-10,0)rotate(-45)")
			  .style("text-anchor", "end");

		  // Add Y axis
		  const y1 = d3.scaleLinear()
			.domain([0, 100])
			.range([ height1, 0]);
			
		  scene1.append("g")
			.call(d3.axisLeft(y1));

		  // Color scale: give me a IMR severity level, I return a color
		  keys_color = ["Low", "Medium", "High" ]
		  var color1 = d3.scaleOrdinal(keys_color)
			.domain(["Low", "Medium", "High" ])
			.range([ "cyan", "purple", "orange"])
		
		//define tool tip properties
		var bar_tooltip = d3.select("body")
				.append("div")
				.append("div")
				.style("opacity", 0)
				.attr("class", "tooltip")
				.style("background-color", "black")
				.style("border-radius", "15px")
				.style("padding", "8px")
				.style("color", "white")

		  // Add Bars
		  scene1.selectAll("mybar")
			.data(data)
			.enter()
			.append("rect")
				.attr("class", "mybar")
			    .attr("x", d => x1(d.Country))
			    .attr("y", d => y1(d.Infant_Mortality))
				.attr("width", x1.bandwidth())
			    .attr("height", d => height - y1(d.Infant_Mortality))
			    .attr("fill", function(d) { return color1(d.IMR_Severity) })
				.on("mouseover", function (d) {
					bar_tooltip.transition()
					.duration(200)
					.style("opacity", .9);
					
					bar_tooltip.html("<b>Country:</b> " + d.Country + '<br>' +
									 "<b>Infant Mortality:</b> " + d.Infant_Mortality + '<br>' +
									 "<b>GDP:</b> " + d.GDP
									 )
							.style("left", (d3.event.pageX) + "px")
							.style("top", (d3.event.pageY - 28) + "px");
					})
						
				.on("mouseout", function (d) {
					bar_tooltip.transition()
					.duration(500)
					.style("opacity", 0);
					});
					
/*
	// Add X axis label:
	scene1.append("text")
		.attr("text-anchor", "middle")
		.attr("x", width1)
		.attr("y", height1 + margin1.top + 20)
		.text("Country");
		
	// Y axis label:
	scene1.append("text")
		.attr("text-anchor", "middle")
		.attr("transform", "rotate(-90)")
		.attr("y", -margin1.left+20)
		.attr("x", -margin1.top)
		.text("Infant Mortality Rate");*/

      /*  scene1.append('g')
            .attr('transform', 'translate(' + (width1 / 2) + ', ' + (height1 + margin1.top + 42) + ')')
            .append('text')
				.attr("class", "x label")
				.attr('text-anchor', 'middle')
				.text("Country");
				//.style("opacity", 0).transition().delay(3500).duration(2000).style("opacity", 1) */
			
        scene1.append('g')
            .attr('transform', 'translate(' + (-margin1.left + 15) + ', ' + (height1 / 2 + margin1.top ) + ')')
            .append('text')
				.attr("class", "y label")
				.attr('text-anchor', 'middle')
				.attr("transform", "rotate(-90)")
				.text("Infant Mortality Rate");


	// Add Legend
	
	var size = 20
	scene1.selectAll("legend")
		.data(keys_color)
		.enter()
		.append("rect")
		.attr("x", 500)
		.attr("y", function (d, i) { return 20 + i * (size + 5) })
		.attr("width", size)
		.attr("height", size)
		.attr("stroke", "black")
		.style("fill", function (d) { return color1(d) })
		.on("mouseover", function (d) { filterData(d) })
		.on("mouseleave", function (d) { filterDataOff(d) })

	scene1.selectAll("labels")
		.data(keys_color)
		.enter()
		.append("text")
		.attr("x", 500 + size * 1.2)
		.attr("y", function (d, i) { return 20 + i * (size + 5) + (size / 2) })
		.style("fill", function (d) { return "black" })
		.text(function (d) { return d })
		.attr("text-anchor", "left")
		.style("alignment-baseline", "middle")
		.on("mouseover", function (d) { filterData(d) })
		.on("mouseleave", function (d) { filterDataOff(d) }) 

    function filterData(d) {
        scene1.selectAll('.mybar')
            .filter(function(data) {
                return (data.IMR_Severity != d);
            })
            .transition()
            .style('opacity', 0.05);
    }

    function filterDataOff(d) {
        scene1.selectAll('.mybar')
            .transition()
            .style('opacity', 0.9);
    }

})	
</script>


<!--- Scene2 --->

<script>
// Scene 2

// set the dimensions and margins of the graph
var margin2 = {top: 10, right: 30, bottom: 30, left: 60},
//    width = 460 - margin.left - margin.right,
//    height = 400 - margin.top - margin.bottom;

    width2 = 800 - margin2.left - margin2.right,
    height2 = 500 - margin2.top - margin2.bottom;


// append the svg object to the body of the page
var scene2 = d3.select("#scene2")
  .append("svg")
    .attr("width", width2 + margin2.left + margin2.right)
    .attr("height", height2 + margin2.top + margin2.bottom)
  .append("g")
    .attr("transform",
          "translate(" + margin2.left + "," + margin2.top + ")");

//Read the data
//d3.csv("https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/iris.csv", function(data) {
d3.csv("https://raw.githubusercontent.com/naveenkcb/naveenkcb.github.io/main/narrative-viz-proj/world-data-2023-cleaned-3.csv").then ( function(data) {


  // Add X axis
  var x2 = d3.scaleLinear()
    .domain([0, 14])
    .range([ 0, width2 ]);
  scene2.append("g")
    .attr("transform", "translate(0," + height + ")")
    .call(d3.axisBottom(x2));

  // Add Y axis
  var y2 = d3.scaleLinear()
    .domain([0, 100])
    .range([ height2, 0]);
  scene2.append("g")
    .call(d3.axisLeft(y2));

  // Color scale: give me a IMR severity level, I return a color
  var color2 = d3.scaleOrdinal()
    .domain(["Low", "Medium", "High" ])
    //.range([ "#440154ff", "#21908dff", "#fde725ff"])
	.range([ "cyan", "purple", "orange"])


	var scatter_tooltip2 = d3.select("body")
				.append("div")
				.append("div")
				.style("opacity", 0)
				.attr("class", "tooltip")
				.style("background-color", "black")
				.style("border-radius", "15px")
				.style("padding", "8px")
				.style("color", "white")


  // Add dots
  scene2.append('g')
    .selectAll("dot")
    .data(data)
    .enter()
    .append("circle")
      .attr("cx", function (d) { return x2(d.Minimum_Wage); } )
      .attr("cy", function (d) { return y2(d.Infant_Mortality); } )
      .attr("r", 5)
      .style("fill", function (d) { return color2(d.IMR_Severity) } )
	    .on("mouseover", function (d) {
				scatter_tooltip2.transition()
								.duration(200)
								.style("opacity", .9);
				
				scatter_tooltip2.html("<b>Country:</b> " + d.Country + '<br>' +
									"<b>Infant Mortality:</b> " + d.Infant_Mortality + '<br>' +
									"<b>Minimum Wage:</b> " + d.Minimum_Wage)
								.style("left", (d3.event.pageX) + "px")
								.style("top", (d3.event.pageY - 28) + "px");
				})
						
				.on("mouseout", function (d) {
					scatter_tooltip2.transition()
					.duration(500)
					.style("opacity", 0);
				});


	// Add X axis label:
	scene2.append("text")
		.attr("text-anchor", "left")
		.attr("x", width2)
		.attr("y", height2 + margin2.top + 20)
		.text("Minimum Wage");

/*	// Y axis label:
	scene2.append("text")
		.attr("text-anchor", "middle")
		.attr("transform", "rotate(-90)")
		.attr("y", -margin2.left + 20)
		.attr("x", -margin2.top)
		.text("Infant Mortality Rate (# of deaths per 1000 live births)")*/

    /*    scene2.append('g')
            .attr('transform', 'translate(' + (width2 / 2) + ', ' + (height2 + margin2.top + 42) + ')')
            .append('text')
				.attr("class", "x label")
				.attr('text-anchor', 'middle')
				.text("Minimum Wage");*/
				
        scene2.append('g')
            .attr('transform', 'translate(' + (-margin2.left + 15) + ', ' + (height2 / 2 + margin2.top ) + ')')
            .append('text')
				.attr("class", "y label")
				.attr('text-anchor', 'middle')
				.attr("transform", "rotate(-90)")
				.text("Infant Mortality Rate");
				

			// Annotation
			scene2.append('rect')
				.attr("x", 100)
				.attr("y", 5)
				.attr("width", 600)
				.attr("height", 30)
				.style("fill", 'lightblue')

			scene2.append('text')
				.attr("x", 110)
				.attr("y", 15)
				.attr("width", 60)
				.attr("height", 20)
				.style("fill", 'red')
				.text("Minimum wage has a greter influence on the infant death rate. As it increases, it tremendously lowers the infant mortality")
				.attr("text-anchor", "left")
				.style("alignment-baseline", "middle")

})
</script>





<!--- Scene3 --->

<script>
// set the dimensions and margins of the graph
var margin = {top: 10, right: 30, bottom: 50, left: 60},
//    width = 460 - margin.left - margin.right,
//    height = 400 - margin.top - margin.bottom;

    width = 800 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;


// append the svg object to the body of the page
var svg = d3.select("#scene3")
  .append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform",
          "translate(" + margin.left + "," + margin.top + ")");

//Read the data
d3.csv("https://raw.githubusercontent.com/naveenkcb/naveenkcb.github.io/main/narrative-viz-proj/world-data-2023-cleaned-3.csv").then ( function(data) {


  // Add X axis
  var x = d3.scaleLinear()
    .domain([0, 7])
    .range([ 0, width ]);
  svg.append("g")
    .attr("transform", "translate(0," + height + ")")
    .call(d3.axisBottom(x));

  // Add Y axis
  var y = d3.scaleLinear()
    .domain([0, 100])
    .range([ height, 0]);
  svg.append("g")
    .call(d3.axisLeft(y));

  // Color scale: give me a IMR severity level, I return a color
  var color = d3.scaleOrdinal()
    .domain(["Low", "Medium", "High" ])
    //.range([ "#440154ff", "#21908dff", "#fde725ff"])
	.range([ "cyan", "purple", "orange"])


	var scatter_tooltip = d3.select("body")
				.append("div")
				.append("div")
				.style("opacity", 0)
				.attr("class", "tooltip")
				.style("background-color", "black")
				.style("border-radius", "15px")
				.style("padding", "8px")
				.style("color", "white")


  // Add dots
  svg.append('g')
    .selectAll("dot")
    .data(data)
    .enter()
    .append("circle")
      .attr("cx", function (d) { return x(d.Fertility_Rate); } )
      .attr("cy", function (d) { return y(d.Infant_Mortality); } )
      .attr("r", 5)
      .style("fill", function (d) { return color(d.IMR_Severity) } )
	    .on("mouseover", function (d) {
				 scatter_tooltip.transition()
								.duration(200)
								.style("opacity", .9);
				 scatter_tooltip.html("<b>Country:</b> " + d.Country + '<br>' +
									 "<b>Infant Mortality:</b> " + d.Infant_Mortality + '<br>' +
									 "<b>Fertility Rate:</b> " + d.Fertility_Rate
									 )
								.style("left", (d3.event.pageX) + "px")
								.style("top", (d3.event.pageY - 28) + "px");
						})
						
					.on("mouseout", function (d) {
						scatter_tooltip.transition()
							.duration(500)
							.style("opacity", 0);
					});

	// Add X axis label:
	svg.append("text")
		.attr("text-anchor", "left")
		.attr("x", width/2)
		.attr("y", height + margin.top + 20)
		.text("Fertility Rate (# of childs per woman)");

/*	// Y axis label:
	svg.append("text")
		.attr("text-anchor", "middle")
		.attr("transform", "rotate(-90)")
		.attr("y", -margin.left+20)
		.attr("x", -margin.top)
		.text("Infant Mortality Rate (# of deaths per 1000 live births)")

        svg.append('g')
            .attr('transform', 'translate(' + (width / 2) + ', ' + (height + margin.top + 42) + ')')
            .append('text')
				.attr("class", "x label")
				.attr('text-anchor', 'middle')
				.text("Fertility Rate"); */
				
        svg.append('g')
            .attr('transform', 'translate(' + (-margin.left + 15) + ', ' + (height / 2 + margin.top ) + ')')
            .append('text')
				.attr("class", "y label")
				.attr('text-anchor', 'middle')
				.attr("transform", "rotate(-90)")
				.text("Infant Mortality Rate");	

					
			// Annotation
			svg.append('rect')
				.attr("x", 70)
				.attr("y", 5)
				.attr("width", 600)
				.attr("height", 30)
				.style("fill", 'lightblue')

			svg.append('text')
				.attr("x", 80)
				.attr("y", 15)
				.attr("width", 60)
				.attr("height", 20)
				.style("fill", 'red')
				.text("Women giving birth to more children potentially contribute to increasing infant deaths")
				.attr("text-anchor", "left")
				.style("alignment-baseline", "middle")

})

</script>

</body>
</html>